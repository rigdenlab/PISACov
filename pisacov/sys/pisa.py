"""
This is PISACov, a PISA extension to infer quaternary structure
of proteins from evolutionary covariance.
"""

from pisacov.about import __prog__, __description__, __version__
from pisacov.about import  __author__, __date__, __copyright__

import os

from pisacov.io.conf import PISA_PATH
from pisacov import io as pio

def runpisa(isitbio, outdir=output_tmpdir("pisa")):
    """
    Run PISA and generate interface PDB files for given PDB

    :param isitbio: Specify whether using the ".bio" label in files or not.
    :type isitbio: bool
    :param outdir: Directory where results of PISA will be printed out, defaults to output_tmpdir("pisa")
    :type outdir: str, optional

    :return: Number of candidate interfaces identified by PISA
    :rtype: int

    """
    """
    Run PISA and generate interface PDB files for given PDB

    Parameters
    ----------
    isitbio : bool
        Specify whether using the ".bio" label in files or not.
    outdir : str, optional
        Directory where results of PISA will be printed out. The default is output_tmpdir("pisa").

    Returns
    -------
    n_int : int
        Number of candidate interfaces identified by PISA.

    """
    # new ID
    pfx = 'pisacov_'
    #locpdbid = os.path.splitext(os.path.basename(PDB_PATH))[0]
    pID = pfx+os.path.splitext(os.path.basename(PDB_PATH))[0]

    # Run PISA
    pisa_exec='"'+PISA_PATH+'"'
    #os.system(pisa_exec + ' '+ pID + ' -analyse ' + PDB_PATH + sysfileout())
    try:
        stdoutput=subprocess.check_output(pisa_exec + ' '+ pID + ' -analyse ' + PDB_PATH, stderr=subprocess.STDOUT,shell=True)
    except:
        printout(stdoutput)
        interrupt("ERROR: An error occurred during the execution of PISA (analysis).")

    printout(stdoutput)
    #with open(stdoutpath(), 'a') as out:
        #out.write(stdoutput)

    # Parse PISA xml file

    xmlfile=pdbid()+".interface.xml"
    xmlpath = os.path.join(outdir, xmlfile)
    os.system(pisa_exec + ' '+ pID + ' -xml interface > ' + xmlpath )

    # Obtain number of interfaces generated by PISA
    n_int = n_int_xml()

    printout(str(n_int)+' Interfaces identified',extraline=True)

    # Generate PDB files for each interface
    printout("Generating interface PDB files...")
    #pdbends=biochain_ends('pdb')
    for nif in range(1,n_int+1):
        #Write pdb files
        pdbfile=pdbid()+".interface."+str(nif)+".pdb"
        newpath = os.path.join(outdir, pdbfile)
        try:
            os.system(pisa_exec + ' '+ pID + ' -pdb interface '+ str(nif)+' > ' + newpath)
        except:
            interrupt("ERROR: An error occurred during the execution of PISA (interface pdb files production).")

    printout("  DONE",extraline=True)
    return n_int